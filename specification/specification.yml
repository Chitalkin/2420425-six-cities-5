openapi: "3.0.2"
info:
  title: API сервер для сервиса аренды жилья «Шесть городов»
  description: |-
    * Список ресурсов и маршрутов сервера «Шесть городов».
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: "1.0.0"

tags:
  - name: amenities
    description: Действия с типами удобств.
  - name: comments
    description: Действия с комментариями.
  - name: cities
    description: Действия с городами.
  - name: estates
    description: Действия с типом жилья.
  - name: offers
    description: Действия с объявлениями.
  - name: users
    description: Действия с пользователем.

paths:
  /users/register:
    post:
      tags:
        - users
      summary: Регистрация пользователя
      description: Регистрирует нового пользователя.

      requestBody:
        description: Информация для создания нового пользователя.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createUser"
        required: true

      responses:
        "201":
          description: Пользователь зарегистрирован. Объект пользователя.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"

        "409":
          description: Пользователь с таким email уже существует.

  /users/login:
    post:
      tags:
        - users
      summary: Авторизация пользователя
      description: Авторизует пользователя на основе логина и пароля
      requestBody:
        description: Информация для авторизации пользователя.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/loginUser"
        required: true

      responses:
        "200":
          description: Пользователь авторизован.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"

        "401":
          description: Неправильный логин или пароль пользователя.

    get:
      tags:
        - users
      summary: Проверка состояния пользователя
      description: Возвращает информацию по авторизованному пользователю
      responses:
        "200":
          description: OK

  /users/{userId}/avatar:
    post:
      tags:
        - users
      summary: Загрузить изображение аватара
      description: Загружает изображение аватара пользователя. Изображение
        аватара должно быть в формате `png` или `jpg`.

      requestBody:
        description: Изображение для аватара.
        content:
          "image/jpeg":
            schema:
              type: string
              format: binary
          "image/png":
            schema:
              type: string
              format: binary

      responses:
        "200":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/avatar"

  /comments:
    post:
      tags:
        - comments
      summary: Создание нового комментария
      description: Добавляет новый комментарий
      responses:
        "201":
          description: Created

    get:
      tags:
        - comments
      summary: Получение комментариев
      description: Возвращает список всех комментариев
      responses:
        "200":
          description: OK

  /comments/{commentId}:
    put:
      tags:
        - comments
      summary: Обновление комментария
      description: Обновляет указанный комментарий
      responses:
        "200":
          description: OK

    delete:
      tags:
        - comments
      summary: Удаление комментария
      description: Удаляет указанный комментарий
      responses:
        "204":
          description: No Content

  /cities:
    get:
      tags:
        - cities
      summary: Получение списка городов
      description: Возвращает список всех доступных городов
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/city"

        "404":
          description: Not found response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessage"

  /offers:
    post:
      tags:
        - offers
      summary: Создание нового предложения
      description: Добавляет в коллекцию новое предложение об аренде
      responses:
        "201":
          description: Created

    get:
      tags:
        - offers
      summary: Получение всех предложений об аренде
      description: Возвращает список предложений
      responses:
        "200":
          description: OK

  /offers/{offerId}:
    put:
      tags:
        - offers
      summary: Обновление предложения об аренде
      description: Обновляет информацию о переданном предложении
      responses:
        "200":
          description: OK

    delete:
      tags:
        - offers
      summary: Удаление предложения
      description: Удаляет переданное предложение об аренде
      responses:
        "204":
          description: No Content

  /amenities:
    get:
      tags:
        - amenities
      summary: Получение типов удобств
      description: Возвращает список всех типов удобств
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/amenity"

        "404":
          description: Not found response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessage"

  /estates:
    get:
      tags:
        - estates
      summary: Получение типов предложений
      description: Возвращает список доступных типов предложений
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/estate"

        "404":
          description: Not found response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessage"

components:
  schemas:
    createUser:
      type: object

      properties:
        email:
          type: string
          example: ivan@gmail.com

        name:
          type: string
          example: Ivan

        password:
          type: string
          example: 123456

    loginUser:
      type: object

      properties:
        email:
          type: string
          example: ivan@gmail.com

        password:
          type: string
          example: 123456

    user:
      type: object

      properties:
        id:
          type: string
          example: 123qwerty4567890

        email:
          type: string
          example: ivan@gmail.com

    city:
      type: object

      properties:
        id:
          type: string
          example: 123qwerty4567890

        name:
          type: string
          example: Amsterdam

        latitude:
          type: string
          example: 52.370216

        longitude:
          type: string
          example: 4.895168

    estate:
      type: object

      properties:
        id:
          type: string
          example: 123qwerty4567890

        name:
          type: string
          example: apartment

    amenity:
      type: object

      properties:
        id:
          type: string
          example: 123qwerty4567890

        name:
          type: string
          example: Air conditioning

    errorMessage:
      type: object

      properties:
        message:
          type: string
          example: Текст ошибки

    avatar:
      type: object

      properties:
        id:
          type: string
          example: 123qwerty4567890
        path:
          type: string
          example: /images/best-avatar.jpg

